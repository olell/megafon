// This file is auto-generated by @hey-api/openapi-ts

/**
 * FlagData
 */
export type FlagData = {
    /**
     * Post
     */
    post: string;
    /**
     * Notice
     */
    notice: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * Post
 */
export type Post = {
    /**
     * Id
     */
    id?: string;
    /**
     * Created At
     */
    created_at?: string;
    /**
     * Created By Id
     */
    created_by_id?: string | null;
    /**
     * Parent Id
     */
    parent_id?: string | null;
    /**
     * Content
     */
    content: string;
    /**
     * Created By Name
     */
    readonly created_by_name: string;
    /**
     * Upvotes
     */
    readonly upvotes: number;
    /**
     * Downvotes
     */
    readonly downvotes: number;
    /**
     * Children Count
     */
    readonly children_count: number;
};

/**
 * PostCreate
 */
export type PostCreate = {
    /**
     * Parent
     */
    parent?: string | null;
    /**
     * Content
     */
    content: string;
};

/**
 * PostWithChildren
 */
export type PostWithChildren = {
    /**
     * Id
     */
    id: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Content
     */
    content: string;
    /**
     * Parent Id
     */
    parent_id: string | null;
    /**
     * Created By Name
     */
    created_by_name: string;
    /**
     * Upvotes
     */
    upvotes: number;
    /**
     * Downvotes
     */
    downvotes: number;
    /**
     * Children Count
     */
    children_count: number;
    /**
     * Children
     */
    children?: Array<PostWithChildren>;
};

/**
 * SessionInit
 */
export type SessionInit = {
    /**
     * Username
     */
    username: string;
};

/**
 * User
 */
export type User = {
    /**
     * Id
     */
    id?: string;
    /**
     * Name
     */
    name: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * Vote
 */
export type Vote = {
    /**
     * Id
     */
    id?: string;
    /**
     * Value
     */
    value: number;
    /**
     * Post Id
     */
    post_id?: string | null;
    /**
     * Created By Id
     */
    created_by_id?: string | null;
};

/**
 * VoteData
 */
export type VoteData = {
    /**
     * Post
     */
    post: string;
    /**
     * Value
     */
    value: -1 | 0 | 1;
};

export type GetPostApiV1PostsInfoPostIdGetData = {
    body?: never;
    path: {
        /**
         * Post Id
         */
        post_id: string;
    };
    query?: never;
    url: '/api/v1/posts/info/{post_id}';
};

export type GetPostApiV1PostsInfoPostIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPostApiV1PostsInfoPostIdGetError = GetPostApiV1PostsInfoPostIdGetErrors[keyof GetPostApiV1PostsInfoPostIdGetErrors];

export type GetPostApiV1PostsInfoPostIdGetResponses = {
    /**
     * Successful Response
     */
    200: PostWithChildren;
};

export type GetPostApiV1PostsInfoPostIdGetResponse = GetPostApiV1PostsInfoPostIdGetResponses[keyof GetPostApiV1PostsInfoPostIdGetResponses];

export type GetPostsApiV1PostsGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Since
         */
        since?: string | null;
        /**
         * Max Hours
         */
        max_hours?: number;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Order
         */
        order: 'votes' | 'newest';
    };
    url: '/api/v1/posts/';
};

export type GetPostsApiV1PostsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPostsApiV1PostsGetError = GetPostsApiV1PostsGetErrors[keyof GetPostsApiV1PostsGetErrors];

export type GetPostsApiV1PostsGetResponses = {
    /**
     * Response Get Posts Api V1 Posts  Get
     * Successful Response
     */
    200: Array<Post>;
};

export type GetPostsApiV1PostsGetResponse = GetPostsApiV1PostsGetResponses[keyof GetPostsApiV1PostsGetResponses];

export type CreatePostApiV1PostsPostData = {
    body: PostCreate;
    path?: never;
    query?: never;
    url: '/api/v1/posts/';
};

export type CreatePostApiV1PostsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreatePostApiV1PostsPostError = CreatePostApiV1PostsPostErrors[keyof CreatePostApiV1PostsPostErrors];

export type CreatePostApiV1PostsPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type VoteApiV1PostsVotePostData = {
    body: VoteData;
    path?: never;
    query?: never;
    url: '/api/v1/posts/vote';
};

export type VoteApiV1PostsVotePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VoteApiV1PostsVotePostError = VoteApiV1PostsVotePostErrors[keyof VoteApiV1PostsVotePostErrors];

export type VoteApiV1PostsVotePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetVotesApiV1PostsVotesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/posts/votes';
};

export type GetVotesApiV1PostsVotesGetResponses = {
    /**
     * Response Get Votes Api V1 Posts Votes Get
     * Successful Response
     */
    200: Array<Vote>;
};

export type GetVotesApiV1PostsVotesGetResponse = GetVotesApiV1PostsVotesGetResponses[keyof GetVotesApiV1PostsVotesGetResponses];

export type FlagApiV1PostsFlagPostData = {
    body: FlagData;
    path?: never;
    query?: never;
    url: '/api/v1/posts/flag';
};

export type FlagApiV1PostsFlagPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FlagApiV1PostsFlagPostError = FlagApiV1PostsFlagPostErrors[keyof FlagApiV1PostsFlagPostErrors];

export type FlagApiV1PostsFlagPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSessionApiV1UserGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/user/';
};

export type GetSessionApiV1UserGetResponses = {
    /**
     * Successful Response
     */
    200: User;
};

export type GetSessionApiV1UserGetResponse = GetSessionApiV1UserGetResponses[keyof GetSessionApiV1UserGetResponses];

export type InitSessionApiV1UserPostData = {
    body: SessionInit;
    path?: never;
    query?: never;
    url: '/api/v1/user/';
};

export type InitSessionApiV1UserPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InitSessionApiV1UserPostError = InitSessionApiV1UserPostErrors[keyof InitSessionApiV1UserPostErrors];

export type InitSessionApiV1UserPostResponses = {
    /**
     * Successful Response
     */
    200: User;
};

export type InitSessionApiV1UserPostResponse = InitSessionApiV1UserPostResponses[keyof InitSessionApiV1UserPostResponses];

export type IndexGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type IndexGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};